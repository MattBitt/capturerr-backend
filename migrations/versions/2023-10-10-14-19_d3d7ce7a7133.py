# type: ignore
"""asdf

Revision ID: d3d7ce7a7133
Revises:
Create Date: 2023-10-10 14:19:45.501445

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d3d7ce7a7133"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bars",
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("genre", sa.String(), nullable=True),
        sa.Column("platform", sa.String(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "captures",
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uupk", sa.Uuid(), nullable=False),
        sa.Column("text", sa.String(length=200), nullable=False),
        sa.Column("notes", sa.String(length=200), nullable=True),
        sa.Column("flagged", sa.Boolean(), nullable=False),
        sa.Column("priority", sa.String(length=50), nullable=True),
        sa.Column("captured_time", sa.DateTime(), nullable=True),
        sa.Column("happend_at", sa.DateTime(), nullable=True),
        sa.Column("captured_longitude", sa.Float(), nullable=True),
        sa.Column("captured_latitude", sa.Float(), nullable=True),
        sa.Column("due_date", sa.DateTime(), nullable=True),
        sa.Column("user_pk", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("uupk"),
    )
    op.create_table(
        "dummy_model",
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "foos",
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "ingredient",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "potion",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "tags",
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("genre", sa.String(), nullable=True),
        sa.Column("platform", sa.String(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "bar_foos",
        sa.Column("bar_pk", sa.Integer(), nullable=False),
        sa.Column("foo_pk", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bar_pk"],
            ["bars.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["foo_pk"],
            ["foos.pk"],
        ),
        sa.PrimaryKeyConstraint("bar_pk", "foo_pk"),
    )
    op.create_table(
        "capture_tags",
        sa.Column("tag_pk", sa.Integer(), nullable=False),
        sa.Column("capture_pk", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["capture_pk"],
            ["captures.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_pk"],
            ["tags.pk"],
        ),
        sa.PrimaryKeyConstraint("tag_pk", "capture_pk"),
    )
    op.create_table(
        "dazs",
        sa.Column("comment", sa.String(length=200), nullable=False),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("bar_pk", sa.Integer(), nullable=True),
        sa.Column("foo_pk", sa.Integer(), nullable=True),
        sa.Column("pk", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("account_pk", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bar_pk"],
            ["bars.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["foo_pk"],
            ["foos.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
    )
    op.create_table(
        "potion_ingredient",
        sa.Column("potion_pk", sa.Integer(), nullable=True),
        sa.Column("ingredient_pk", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ingredient_pk"],
            ["ingredient.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["potion_pk"],
            ["potion.pk"],
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("potion_ingredient")
    op.drop_table("dazs")
    op.drop_table("capture_tags")
    op.drop_table("bar_foos")
    op.drop_table("tags")
    op.drop_table("potion")
    op.drop_table("ingredient")
    op.drop_table("foos")
    op.drop_table("dummy_model")
    op.drop_table("captures")
    op.drop_table("bars")
    # ### end Alembic commands ###
